{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nolanschneider/Programming/e-commerce/src/Components/AddItem.js\";\nimport React from \"react\";\nimport { Row, Col, Layout, Divider } from \"antd\";\nimport { Form, Input, InputNumber, Button, Select } from \"antd\";\nimport { Upload, Modal } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport \"./CSS_FILES/AddItem.css\"; //mport 'console.image';\n\nimport { number } from \"prop-types\";\nimport { Redirect } from 'react-router-dom'; //  import { Divider } from \"rc-menu\";\n\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 8\n  }\n};\nconst {\n  Option\n} = Select;\n\nclass AddItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.img = [];\n    this.state = {\n      previewVisible: false,\n      previewImage: \"\",\n      previewTitle: \"\",\n      fileList: [],\n      responce: null,\n      imageList: [],\n      connected: false,\n      optionalInputsStr: [],\n      optionalInputsNum: [],\n      price: \"\",\n      description: \"\",\n      miniDescription: \"\",\n      name: \"\"\n    };\n\n    this.getBase64 = file => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n\n        reader.onload = () => resolve(reader.result);\n\n        reader.onerror = error => reject(error);\n      });\n    };\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.normFile = e => {\n      console.log('Upload event:', e);\n\n      if (Array.isArray(e)) {\n        return e;\n      }\n\n      return e && e.fileList;\n    };\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await this.getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true,\n        previewTitle: file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1)\n      });\n    };\n\n    this.reader = new FileReader();\n\n    this.handleChange = info => {\n      console.log(\"filelist keys \" + Object.keys(info[\"fileList\"]));\n      let fileList = info[\"fileList\"].map(file => {\n        if (file.response) {\n          console.log(file.response.url); // Component will show file.url as link\n\n          file.url = file.response.url; //   this.reader.readAsDataURL(file)\n          // this.reader.onload = () => {\n          // this.reader.result;\n          //}\n          //this.reader.onerror = (error) => (console.log(error));\n          //console.image(file.thumbUrl)\n\n          console.log(file.url);\n        }\n\n        return file;\n      });\n      this.setState({\n        fileList\n      });\n      console.log(\"handleChange\" + fileList[0].url);\n    };\n\n    this.handleChangeSelect = values => {\n      console.log(values);\n    };\n\n    this.onFinishFailed = () => {};\n\n    this.onFinish = values => {\n      console.log(\"Item ->\" + values.user.price);\n      this.setState({\n        price: values.user.price,\n        description: values.user.description,\n        miniDescription: values.user.shortDescription,\n        name: values.user.name\n      });\n      console.log(values);\n      console.log(values.user.name);\n      console.log(values.user.age); // this.addItemFetch({username:values.user.name});\n\n      this.print();\n    };\n\n    this.onFinishInputStr = values => {\n      let temp = this.state.optionalInputsStr;\n      temp.push(values);\n      this.setState({\n        optionalInputsStr: temp\n      });\n    };\n\n    this.onFinishInputNum = values => {\n      let temp = this.state.optionalInputsNum;\n      temp.push(values);\n      this.setState({\n        optionalInputsNum: temp\n      });\n    };\n\n    this.onButtonClick = values => {\n      console.log(\"asdf\" + values);\n      this.setState({\n        confirmPage: true\n      });\n    };\n  }\n\n  addItemFetch(ADD_ITEM_ORDER) {\n    let mysqlServer = \"http://35.224.238.169:444\";\n    let serverRoute = \"/AddItem:\";\n    console.log(ADD_ITEM_ORDER);\n    fetch(mysqlServer + serverRoute + \"\" + JSON.stringify(ADD_ITEM_ORDER) + \"\").then(res => res.json()).then(result => {\n      console.log(\"Reponce -> \" + result);\n      this.setState({\n        responce: result\n      });\n      this.connectedToServer(true);\n      console.log(\"CONNECTTED TO SERVER\");\n    }, error => {\n      this.connectedToServer(false);\n      console.log(\"FAILED TO CONNECT TO SERVER\");\n    });\n  }\n\n  connectedToServer(connected) {\n    if (connected) {\n      //CONNECTED TO SERVER\n      console.log(this.state.responce);\n\n      if (this.state.responce) {\n        this.setState({\n          connected: true\n        });\n      } else {// Connected TO SERVER, BUT DID NOT SUCESSFULL SIGNUP\n      }\n    } else {// DID NOT CONNECT TO SERVER\n      }\n  }\n\n  print() {\n    console.log(\"IMAGE :\");\n    console.log(this.state.fileList[0]);\n    console.log(\"IMAGE1 :\");\n    console.log(this.state.fileList[1].response.url);\n    console.log(\"IMAGE2 :\");\n    console.log(this.getBase64(this.state.fileList[0].originFileObj));\n  }\n\n  render() {\n    const {\n      previewVisible,\n      previewImage,\n      fileList,\n      previewTitle\n    } = this.state;\n    this.img.push(previewImage);\n    console.log(Object.keys(fileList)); //console.image(previewImage)\n\n    const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ant-upload-text\",\n        children: \"Upload picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this);\n\n    let numberInput = /*#__PURE__*/_jsxDEV(Col, {\n      span: 12,\n      children: [/*#__PURE__*/_jsxDEV(Divider, {\n        children: \"Number Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onFinish: this.onFinishInputNum,\n        onFinishFailed: this.onFinishFailedInputNum,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"numLabel\",\n          label: \"Name of input\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"min\",\n          label: \"min\",\n          rules: [],\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"max\",\n          label: \"max\",\n          rules: [],\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: { ...layout.wrapperCol,\n            offset: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Add Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }, this);\n\n    let stringInput = /*#__PURE__*/_jsxDEV(Col, {\n      span: 12,\n      children: [/*#__PURE__*/_jsxDEV(Divider, {\n        children: \"String input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onFinish: this.onFinishInputStr,\n        onFinishFailed: this.onFinishFailedInputStr,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"strLabel\",\n          label: \"Name of input\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"options\",\n          label: \"String input seperated by comma\",\n          rules: [],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: { ...layout.wrapperCol,\n            offset: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Add Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }, this);\n\n    let optionalsNum = this.state.optionalInputsNum.map((obj, i) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Optional Number \" + (i + 1), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", \"Name : \" + obj.numLabe]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", \"max: \" + obj.max, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 81\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" min : \" + obj.min\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 112\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 6\n      }, this);\n    });\n    let optionalsStr = this.state.optionalInputsStr.map((obj, i) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Optional String \" + (i + 1), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Name : \" + obj.strLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"options: \" + obj.options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 81\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 6\n      }, this);\n    });\n\n    if (this.state.confirmPage) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/AddItem/Confirmation/username\",\n          state: {\n            price: this.state.price,\n            name: this.state.name,\n            description: this.state.description,\n            miniDescription: this.state.miniDescription\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 12\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onFinish: this.onFinish,\n          onFinishFailed: this.onFinishFailed,\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            orientation: \"left\",\n            children: [\"Add an item to your Store, \", this.props.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 12,\n              children: [/*#__PURE__*/_jsxDEV(Divider, {\n                children: \"Upload Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"images\",\n                label: \"Item Name\",\n                rules: [{\n                  required: true\n                }],\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"clearfix\",\n                  children: [console.log(fileList), /*#__PURE__*/_jsxDEV(Upload, {\n                    action: \"http://35.224.238.169:444/img:\",\n                    listType: \"picture-card\",\n                    fileList: fileList,\n                    onPreview: this.handlePreview,\n                    onChange: this.handleChange,\n                    getValueFromEvent: this.normFile,\n                    children: fileList.length >= 8 ? null : uploadButton\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                    visible: previewVisible,\n                    title: previewTitle,\n                    footer: null,\n                    onCancel: this.handleCancel,\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      alt: \"example\",\n                      style: {\n                        width: \"100%\"\n                      },\n                      src: previewImage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 12,\n              children: [/*#__PURE__*/_jsxDEV(Divider, {\n                children: \"Item information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: [\"user\", \"name\"],\n                label: \"Item Name\",\n                rules: [{\n                  required: true\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: [\"user\", \"price\"],\n                label: \"Price\",\n                rules: [{\n                  required: true,\n                  type: \"number\",\n                  min: 0\n                }],\n                children: /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Divider, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 20,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: [\"user\", \"shortDescription\"],\n                label: \"Short Description of Item\",\n                rules: [{\n                  required: true\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [10, 10],\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              span: 20,\n              children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                name: [\"user\", \"description\"],\n                label: \"Long Description of Iterm\",\n                rules: [{\n                  required: true\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                wrapperCol: { ...layout.wrapperCol,\n                  offset: 8\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"primary\",\n                  htmlType: \"submit\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            children: \"Optional input boxes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 11\n          }, this), stringInput, numberInput]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: optionalsStr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: optionalsNum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.onButtonClick,\n          type: \"primary\",\n          block: true,\n          children: \"ADD CONFIRMATION PAGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 7\n      }, this);\n    }\n  }\n\n}\n\nexport default AddItem;","map":{"version":3,"sources":["/Users/nolanschneider/Programming/e-commerce/src/Components/AddItem.js"],"names":["React","Row","Col","Layout","Divider","Form","Input","InputNumber","Button","Select","Upload","Modal","PlusOutlined","number","Redirect","layout","labelCol","span","wrapperCol","Option","AddItem","Component","img","state","previewVisible","previewImage","previewTitle","fileList","responce","imageList","connected","optionalInputsStr","optionalInputsNum","price","description","miniDescription","name","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","handleCancel","setState","normFile","e","console","log","Array","isArray","handlePreview","url","preview","originFileObj","substring","lastIndexOf","handleChange","info","Object","keys","map","response","handleChangeSelect","values","onFinishFailed","onFinish","user","shortDescription","age","print","onFinishInputStr","temp","push","onFinishInputNum","onButtonClick","confirmPage","addItemFetch","ADD_ITEM_ORDER","mysqlServer","serverRoute","fetch","JSON","stringify","then","res","json","connectedToServer","render","uploadButton","numberInput","onFinishFailedInputNum","offset","stringInput","onFinishFailedInputStr","optionalsNum","obj","i","numLabe","max","min","optionalsStr","strLabel","options","pathname","props","username","required","length","width","type"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Row, Col, Layout ,Divider} from \"antd\";\nimport { Form, Input, InputNumber, Button,Select } from \"antd\";\nimport { Upload, Modal } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport \"./CSS_FILES/AddItem.css\";\n//mport 'console.image';\nimport { number } from \"prop-types\";\nimport {Redirect} from 'react-router-dom';\n//  import { Divider } from \"rc-menu\";\n\n\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 8 },\n};\nconst { Option } = Select;\n\nclass AddItem extends React.Component {\n  img = [];\n  state = {\n    previewVisible: false,\n    previewImage: \"\",\n    previewTitle: \"\",\n    fileList: [],\n    responce:null,\n    imageList:[],\n    connected:false,\n    optionalInputsStr:[],\n    optionalInputsNum:[],\n    price:\"\",\n    description: \"\",\n    miniDescription:\"\",\n    name:\"\"\n\n  };\n  getBase64 = (file) =>{\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n  }\n  addItemFetch(ADD_ITEM_ORDER){\n    let mysqlServer=\"http://35.224.238.169:444\";\n    let serverRoute=\"/AddItem:\";\n    console.log(ADD_ITEM_ORDER)\n    fetch( mysqlServer + serverRoute + \"\" +JSON.stringify(ADD_ITEM_ORDER) + \"\" )\n    .then(res => res.json())\n    .then(\n      (result) => {\n          console.log(\"Reponce -> \" + result)\n        this.setState({\n            responce:result\n        });\n        this.connectedToServer(true);\n        console.log(\"CONNECTTED TO SERVER\");\n  \n      },\n      (error) => {\n       this.connectedToServer(false);\n        console.log(\"FAILED TO CONNECT TO SERVER\");\n\n      }\n    )\n  }\nconnectedToServer(connected){\n    if(connected){\n        //CONNECTED TO SERVER\n        console.log(this.state.responce)\n        if(this.state.responce ){\n            this.setState(\n                {\n                    connected:true\n                }\n            );\n        }else{\n            // Connected TO SERVER, BUT DID NOT SUCESSFULL SIGNUP\n        }\n    }else{\n        // DID NOT CONNECT TO SERVER\n    }\n}\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  normFile = e => {\n    console.log('Upload event:', e);\n  \n    if (Array.isArray(e)) {\n      return e;\n    }\n  \n    return e && e.fileList;\n  };\n  \n  \n\n  handlePreview = async (file) => {\n    if (!file.url && !file.preview) {\n      file.preview = await this.getBase64(file.originFileObj);\n    }\n    this.setState({\n      previewImage: file.url || file.preview,\n      previewVisible: true,\n      previewTitle:\n        file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\n    });\n  };\n  print(){\n    console.log(\"IMAGE :\")\n    console.log(this.state.fileList[0])\n    console.log(\"IMAGE1 :\")\n\n    console.log(this.state.fileList[1].response.url)\n    console.log(\"IMAGE2 :\")\n\n    console.log(this.getBase64(this.state.fileList[0].originFileObj));\n\n  }\n  reader = new FileReader();\n\n  handleChange = ( info ) => {\n    console.log(\"filelist keys \" + Object.keys(info[\"fileList\"]))\n    let fileList = info[\"fileList\"].map(file => {\n      if (file.response) {\n        console.log(file.response.url)\n        // Component will show file.url as link\n        file.url = file.response.url;\n\n     //   this.reader.readAsDataURL(file)\n       // this.reader.onload = () => {\n         // this.reader.result;\n        //}\n      //this.reader.onerror = (error) => (console.log(error));\n        //console.image(file.thumbUrl)\n        console.log(file.url);\n      }\n      return file;\n    });\n\n    this.setState({ fileList });\n      console.log(\"handleChange\" + (fileList[0].url))\n  };\n  handleChangeSelect = (values) => {\n    console.log(values)\n  };\n  onFinishFailed = () => {}\n  onFinish = (values) =>{\n    console.log(\"Item ->\" + values.user.price)\n    this.setState({    \n      price: values.user.price,\n      description: values.user.description,\n      miniDescription:values.user.shortDescription,\n      name:values.user.name\n    });\n    console.log(values)\n    console.log(values.user.name)\n    console.log(values.user.age)\n   // this.addItemFetch({username:values.user.name});\n   this.print();\n  }\n  onFinishInputStr = (values) =>{\n    let temp = this.state.optionalInputsStr\n    temp.push(values);\n    this.setState({\n      optionalInputsStr:temp\n    });\n  }\n  onFinishInputNum = (values) =>{\n    let temp = this.state.optionalInputsNum\n    temp.push(values);\n    this.setState({\n      optionalInputsNum:temp\n    });\n  }\n  onButtonClick = (values) => {\n    console.log(\"asdf\" + values);\n    this.setState({\n        confirmPage:true,\n    })\n}\n\n  render() {\n    \n    const { previewVisible, previewImage, fileList, previewTitle } = this.state;\n    this.img.push(previewImage)\n    console.log(Object.keys((fileList)));\n\n    //console.image(previewImage)\n    const uploadButton = (\n      <div>\n        <PlusOutlined />\n        <div className=\"ant-upload-text\">Upload picture</div>\n      </div>\n    );\nlet numberInput = (\n    <Col span={12}>\n      <Divider>Number Input</Divider>\n      <Form onFinish={this.onFinishInputNum} onFinishFailed={this.onFinishFailedInputNum}>\n       <Form.Item name={\"numLabel\"} label={\"Name of input\"}> \n                <Input />\n      </Form.Item>\n       <Form.Item name={\"min\"} label={\"min\"} rules={[]}> \n                <InputNumber />\n      </Form.Item>\n      <Form.Item name={\"max\"} label={\"max\"} rules={[]}> \n                <InputNumber />\n      </Form.Item>\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Add Item\n                </Button>\n      </Form.Item>\n    </Form>\n\n    </Col>\n  );\n\n  let stringInput = (\n    <Col span={12}>\n      <Divider>String input</Divider>\n      <Form onFinish={this.onFinishInputStr} onFinishFailed={this.onFinishFailedInputStr}>\n       <Form.Item name={\"strLabel\"} label={\"Name of input\"}> \n                <Input />\n      </Form.Item>\n       <Form.Item name={\"options\"} label={\"String input seperated by comma\"} rules={[]}> \n                <Input />\n      </Form.Item>\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Add Item\n                </Button>\n      </Form.Item>\n    </Form>\n\n    </Col>\n  );\n  let optionalsNum = this.state.optionalInputsNum.map((obj,i)=> {\n\n    return (\n     \n     <li>{\"Optional Number \" + (i + 1)} <ul> <li> {\"Name : \" + obj.numLabe}</li><li> { \"max: \" + obj.max} </li><li>{\" min : \" + obj.min}</li></ul></li>\n\n    );\n  });\n  let optionalsStr = this.state.optionalInputsStr.map((obj,i)=> {\n\n    return (\n     \n     <li>{\"Optional String \" + (i + 1)} <ul> <li>{\"Name : \" + obj.strLabel}</li><li>{\"options: \" + obj.options}</li></ul></li>\n\n    );\n  });\n  if(this.state.confirmPage){\n    return <Redirect to={{pathname:\"/AddItem/Confirmation/username\",\n                          state:{\n                            \n                              price:this.state.price,\n                              name:this.state.name,\n                              description:this.state.description,\n                              miniDescription:this.state.miniDescription,\n                          }\n  }}/>\n  }else {\n    return (\n\n      <div>\n        <Form onFinish={this.onFinish} onFinishFailed={this.onFinishFailed}>\n        <Divider orientation=\"left\">Add an item to your Store, {this.props.username}</Divider>\n\n          <Row>\n            <Col span={12}>\n            <Divider>Upload Images</Divider>\n            <Form.Item\n                name={\"images\"}\n                label=\"Item Name\"\n                rules={[{ required: true }]}\n              >\n              <div className=\"clearfix\">\n              {console.log(fileList)}\n                <Upload \n                  action=\"http://35.224.238.169:444/img:\"\n                  listType=\"picture-card\"\n                  fileList={fileList}\n                  onPreview={this.handlePreview}\n                  onChange={this.handleChange}\n                  getValueFromEvent={this.normFile}\n                >\n                  {fileList.length >= 8 ? null : uploadButton}\n                </Upload>\n                \n                <Modal\n                  visible={previewVisible}\n                  title={previewTitle}\n                  footer={null}\n                  onCancel={this.handleCancel}\n                >\n                  <img\n                    alt=\"example\"\n                    style={{ width: \"100%\" }}\n                    src={previewImage}\n                  />\n\n                </Modal>\n          \n              </div>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n            <Divider>Item information</Divider>\n\n              <Form.Item\n                name={[\"user\", \"name\"]}\n                label=\"Item Name\"\n                rules={[{ required: true }]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                name={[\"user\", \"price\"]}\n                label=\"Price\"\n                rules={[{ required: true, type: \"number\", min: 0 }]}\n              >\n                <InputNumber />\n              </Form.Item>\n            </Col>\n          </Row>\n\n\n          <Row>\n          <Divider>Description</Divider>\n\n            <Col span={20}>\n              <Form.Item\n                name={[\"user\", \"shortDescription\"]}\n                label=\"Short Description of Item\"\n                rules={[{ required: true }]}\n              >\n                <Input.TextArea />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={[10, 10]}>\n            <Col span={20}>\n              <Form.Item\n                name={[\"user\", \"description\"]}\n                label=\"Long Description of Iterm\"\n                rules={[{ required: true }]}\n\n              >\n                <Input.TextArea />\n              </Form.Item>\n              <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Save\n                </Button>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n        <Row>\n          <Divider>Optional input boxes</Divider>\n            {stringInput }\n            {numberInput}\n          </Row>\n          <Row>\n            <Col span={12}>\n              <ul>\n              {optionalsStr}\n\n                </ul>\n              </Col>\n              <Col span={12}>\n\n                <ul>\n                {optionalsNum}\n                </ul>\n            </Col>\n\n           </Row> \n          <Button onClick={this.onButtonClick} type=\"primary\" block>\n          ADD CONFIRMATION PAGE\n        </Button>\n      </div>\n     \n    );\n  }\n  }\n}\nexport default AddItem;\n"]},"metadata":{},"sourceType":"module"}