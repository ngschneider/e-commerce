{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nolanschneider/Programming/e-commerce/src/Components/AddItemConfirmation.js\";\nimport React, { useState } from \"react\";\nimport { Button, Select } from \"antd\";\nimport { Typography, Row, Col } from \"antd\";\nimport { Carousel, Form } from \"antd\";\nimport \"./CSS_FILES/Item.css\";\nimport s1 from \"./images/Tshirt1.png\";\nimport s2 from \"./images/Tshirt2.jpg\";\nimport s3 from \"./images/Tshirt3.png\";\nimport s4 from \"./images/Tshirt4.jpg\";\nimport Item from \"./Item.js\";\nimport { Space } from \"antd\";\nimport FormItem from \"antd/lib/form/FormItem\"; //This page will fill from AddItem.js\n\nclass AddItemConfirmation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"jjen\",\n      itemName: \"Television\",\n      price: \"500.00\",\n      //Images: [{pic:telePic1.png, pic:telePic2.png, pic:telePic3.jpg}],\n      //miniDescription: [{listItem:70 inch tv, listItem:4k resolution, listItem:Smart TV}],\n      description: \"THIS IS A VERY LONG DESCRIPTION\" //\t\t\tspecialDisplay: [{inputType:number, name:Quantity, Rangelow:0, RangeHigh:10},\n      //{inputType: textbox, name:Size, Sizes: [{XS, S, M, L, XL}]}]\n\n    };\n\n    this.onFinish = values => {\n      console.log(values);\n      console.log(this.props.location.state.price);\n      this.addItemConfirmationFetch({\n        itemName: this.props.location.state.name,\n        price: this.props.location.state.price,\n        images: this.props.location.state.name + \".jpg\",\n        miniDescription: this.props.location.state.miniDescription,\n        description: this.props.location.state.description,\n        Quantity: \"1\",\n        username: this.props.username\n      });\n    };\n\n    this.state = {\n      response: null,\n      message: \"\"\n    };\n  }\n\n  addItemConfirmationFetch(ADD_ITEM_ORDER) {\n    let mysqlServer = \"http://ec2-3-16-215-130.us-east-2.compute.amazonaws.com:8081\";\n    let serverRoute = \"/Add:\";\n    console.log(ADD_ITEM_ORDER);\n    fetch(mysqlServer + serverRoute + \"\" + JSON.stringify(ADD_ITEM_ORDER) + \"\").then(res => res.json()).then(result => {\n      console.log(\"Reponce -> \" + result);\n      this.setState({\n        responce: result\n      });\n      this.connectedToServer(true);\n      console.log(\"CONNECTTED TO SERVER\");\n    }, error => {\n      this.connectedToServer(false);\n      console.log(\"FAILED TO CONNECT TO SERVER\");\n    });\n  }\n\n  connectedToServer(didConnect) {\n    if (didConnect) {\n      if (this.state) {\n        // Login Route responded sucessfully\n        console.log(\"SUCESSFULLY CHANGED PASSWORD\");\n        this.setState({\n          message: \"Sucessfully changed password!\"\n        });\n      } else if (!this.state.response) {\n        console.log(\"FAILED TO CHANGE PASSWORD\");\n        this.setState({\n          message: \"Failed to change password :(\"\n        });\n      }\n    } else {//DO SOMETHING HERE IF DIDNT CONNECT TO SERVER\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onFinish: this.onFinish,\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          name: this.props.location.state.name,\n          price: this.props.location.state.price,\n          description: this.props.location.state.description,\n          miniDescription: this.props.location.state.miniDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Add Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            danger: true,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AddItemConfirmation;","map":{"version":3,"sources":["/Users/nolanschneider/Programming/e-commerce/src/Components/AddItemConfirmation.js"],"names":["React","useState","Button","Select","Typography","Row","Col","Carousel","Form","s1","s2","s3","s4","Item","Space","FormItem","AddItemConfirmation","Component","constructor","props","state","username","itemName","price","description","onFinish","values","console","log","location","addItemConfirmationFetch","name","images","miniDescription","Quantity","response","message","ADD_ITEM_ORDER","mysqlServer","serverRoute","fetch","JSON","stringify","then","res","json","result","setState","responce","connectedToServer","error","didConnect","render"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Select } from \"antd\";\nimport { Typography, Row, Col } from \"antd\";\nimport { Carousel, Form } from \"antd\";\nimport \"./CSS_FILES/Item.css\";\nimport s1 from \"./images/Tshirt1.png\";\nimport s2 from \"./images/Tshirt2.jpg\";\nimport s3 from \"./images/Tshirt3.png\";\nimport s4 from \"./images/Tshirt4.jpg\";\nimport Item from \"./Item.js\";\nimport { Space } from \"antd\";\nimport FormItem from \"antd/lib/form/FormItem\";\n\n//This page will fill from AddItem.js\n\nclass AddItemConfirmation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: null,\n      message: \"\",\n    };\n  }\n  state = {\n    username: \"jjen\",\n    itemName: \"Television\",\n    price: \"500.00\",\n    //Images: [{pic:telePic1.png, pic:telePic2.png, pic:telePic3.jpg}],\n    //miniDescription: [{listItem:70 inch tv, listItem:4k resolution, listItem:Smart TV}],\n    description: \"THIS IS A VERY LONG DESCRIPTION\",\n    //\t\t\tspecialDisplay: [{inputType:number, name:Quantity, Rangelow:0, RangeHigh:10},\n    //{inputType: textbox, name:Size, Sizes: [{XS, S, M, L, XL}]}]\n  };\n  addItemConfirmationFetch(ADD_ITEM_ORDER) {\n    let mysqlServer =\n      \"http://ec2-3-16-215-130.us-east-2.compute.amazonaws.com:8081\";\n    let serverRoute = \"/Add:\";\n    console.log(ADD_ITEM_ORDER);\n    fetch(mysqlServer + serverRoute + \"\" + JSON.stringify(ADD_ITEM_ORDER) + \"\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          console.log(\"Reponce -> \" + result);\n          this.setState({\n            responce: result,\n          });\n          this.connectedToServer(true);\n          console.log(\"CONNECTTED TO SERVER\");\n        },\n        (error) => {\n          this.connectedToServer(false);\n          console.log(\"FAILED TO CONNECT TO SERVER\");\n        }\n      );\n  }\n\n  connectedToServer(didConnect) {\n    if (didConnect) {\n      if (this.state) {\n        // Login Route responded sucessfully\n\n        console.log(\"SUCESSFULLY CHANGED PASSWORD\");\n        this.setState({\n          message: \"Sucessfully changed password!\",\n        });\n      } else if (!this.state.response) {\n        console.log(\"FAILED TO CHANGE PASSWORD\");\n        this.setState({\n          message: \"Failed to change password :(\",\n        });\n      }\n    } else {\n      //DO SOMETHING HERE IF DIDNT CONNECT TO SERVER\n    }\n  }\n  onFinish = (values) => {\n    console.log(values);\n    console.log(this.props.location.state.price);\n\n    this.addItemConfirmationFetch({\n      itemName: this.props.location.state.name,\n      price: this.props.location.state.price,\n      images: this.props.location.state.name + \".jpg\",\n      miniDescription: this.props.location.state.miniDescription,\n      description: this.props.location.state.description,\n      Quantity: \"1\",\n      username: this.props.username\n    });\n  };\n  render() {\n\n    return (\n      <div>\n        <Form onFinish={this.onFinish}>\n          <Item\n           name={this.props.location.state.name} \n           price={this.props.location.state.price} \n           description={this.props.location.state.description} \n           miniDescription={this.props.location.state.miniDescription}/>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Add Item\n            </Button>\n          </Form.Item>\n          <Form.Item>\n            <Button danger>Cancel</Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\nexport default AddItemConfirmation;\n"]},"metadata":{},"sourceType":"module"}