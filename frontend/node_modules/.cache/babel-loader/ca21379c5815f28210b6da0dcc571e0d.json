{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nolanschneider/Programming/e-commerce/src/Components/Sell.js\";\nimport React from \"react\";\nimport MiniItemRow from \"./MiniItemRow.js\";\nimport MiniItem from \"./MiniItem.js\";\nimport \"./CSS_FILES/MiniItem.css\";\nimport { Row, Col, Divider } from \"antd\";\nimport { Button } from \"antd\";\nimport { Redirect } from 'react-router-dom';\nconst style = {\n  background: \"#0092ff\",\n  padding: \"8px 0\"\n};\n\nclass Sell extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onButtonClick = values => {\n      this.setState({\n        additem: true\n      });\n    };\n\n    this.state = {\n      isMerchant: false,\n      // Is the user a merchant?\n      connected: false,\n      //\n      currentItems: [],\n      // current products in store\n      soldItems: [],\n      // Products sold\n      response: null,\n      // response from server\n      additem: false // User Click addItem\n\n    };\n  }\n\n  sellFetch(SELL_ORDER) {\n    let mysqlServer = \"http://ec2-3-16-215-130.us-east-2.compute.amazonaws.com:8081\";\n    let serverRoute = \"/Sell:\";\n    console.log(SELL_ORDER);\n    fetch(mysqlServer + serverRoute + JSON.stringify(SELL_ORDER)).then(res => res.json()).then(result => {\n      //result = JSON.parse(result)\n      this.setState({\n        response: result,\n        currentItems: result.currentItems,\n        soldItems: result.soldItems\n      });\n      this.connectedToServer(true);\n      console.log(\"CONNECTTED TO SERVER\");\n    }, error => {\n      this.connectedToServer(false);\n      console.log(\"FAILED TO CONNECT TO SERVER\");\n    });\n  }\n\n  connectedToServer(connected) {\n    if (connected) {\n      //CONNECTED TO SERVER\n      console.log(this.state.response);\n\n      if (this.state.responce) {\n        this.setState({\n          connected: true\n        });\n      } else {// Connected TO SERVER, BUT DID NOT SUCESSFULL SIGNUP\n      }\n    } else {// DID NOT CONNECT TO SERVER\n      }\n  }\n\n  componentDidMount() {\n    console.log(\"username: \" + this.props.username);\n    this.sellFetch({\n      username: this.props.username\n    });\n  }\n\n  render() {\n    if (!this.state.additem) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"left\",\n          style: {\n            color: \"#333\",\n            fontWeight: \"normal\"\n          },\n          children: \"Unsold Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MiniItemRow, {\n          items: this.state.currentItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"left\",\n          style: {\n            color: \"#333\",\n            fontWeight: \"normal\"\n          },\n          children: \"Sold Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MiniItemRow, {\n          items: this.state.soldItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.onButtonClick,\n          type: \"primary\",\n          block: true,\n          children: \"Add Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    } else {\n      let routePath = \"/AddItem/\" + this.props.username;\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: routePath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }, this);\n    }\n  }\n\n}\n\nexport default Sell;","map":{"version":3,"sources":["/Users/nolanschneider/Programming/e-commerce/src/Components/Sell.js"],"names":["React","MiniItemRow","MiniItem","Row","Col","Divider","Button","Redirect","style","background","padding","Sell","Component","constructor","props","onButtonClick","values","setState","additem","state","isMerchant","connected","currentItems","soldItems","response","sellFetch","SELL_ORDER","mysqlServer","serverRoute","console","log","fetch","JSON","stringify","then","res","json","result","connectedToServer","error","responce","componentDidMount","username","render","color","fontWeight","routePath"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport MiniItemRow from \"./MiniItemRow.js\";\nimport MiniItem from \"./MiniItem.js\";\nimport \"./CSS_FILES/MiniItem.css\";\nimport { Row, Col, Divider } from \"antd\";\nimport { Button } from \"antd\";\nimport {Redirect} from 'react-router-dom';\n\nconst style = { background: \"#0092ff\", padding: \"8px 0\" };\n\nclass Sell extends React.Component {\n\n        constructor(props){\n            super(props);\n            this.state = {\n                isMerchant: false, // Is the user a merchant?\n                connected:false,   //\n                currentItems:[],   // current products in store\n                soldItems:[],       // Products sold\n                response:null,     // response from server\n                additem:false       // User Click addItem\n            }\n        }\n        \n        sellFetch(SELL_ORDER){\n            let mysqlServer=\"http://ec2-3-16-215-130.us-east-2.compute.amazonaws.com:8081\";\n            let serverRoute=\"/Sell:\";\n            console.log(SELL_ORDER)\n            fetch( mysqlServer + serverRoute +JSON.stringify(SELL_ORDER)  )\n            .then(res => res.json())\n            .then(\n              (result) => {\n                  //result = JSON.parse(result)\n                this.setState({\n                    response:result,\n                    currentItems:result.currentItems,\n                    soldItems:result.soldItems\n                });\n                this.connectedToServer(true);\n                console.log(\"CONNECTTED TO SERVER\");\n          \n              },\n              (error) => {\n               this.connectedToServer(false);\n                console.log(\"FAILED TO CONNECT TO SERVER\");\n        \n              }\n            )\n          }\n\n        connectedToServer(connected){\n            if(connected){\n                //CONNECTED TO SERVER\n                console.log(this.state.response)\n                if(this.state.responce ){\n                    this.setState(\n                        {\n                            connected:true\n                        }\n                    );\n                }else{\n                    // Connected TO SERVER, BUT DID NOT SUCESSFULL SIGNUP\n                }\n            }else{\n                // DID NOT CONNECT TO SERVER\n                \n            }\n        }\n\n    componentDidMount(){\n        console.log(\"username: \" + this.props.username);\n        this.sellFetch({username:this.props.username})\n    }\n\nonButtonClick = (values) => {\n    this.setState({\n        additem:true,\n    })\n}\n\n  render() {\n      if(!this.state.additem) {\n        return (\n        <>\n            <Divider\n            orientation=\"left\"\n            style={{ color: \"#333\", fontWeight: \"normal\" }}\n            >\n            Unsold Items\n            </Divider>\n            <MiniItemRow items={this.state.currentItems}/>\n            <Divider\n            orientation=\"left\"\n            style={{ color: \"#333\", fontWeight: \"normal\" }}\n            >\n            Sold Items\n            </Divider>\n            <MiniItemRow items={this.state.soldItems} />\n            <Button onClick={this.onButtonClick} type=\"primary\" block>\n            Add Item\n            </Button>\n        </>\n        );\n    }else{\n        let routePath=\"/AddItem/\"+ this.props.username\n       return <Redirect to={routePath}/>\n    }\n  }\n}\nexport default Sell;"]},"metadata":{},"sourceType":"module"}