{"ast":null,"code":"/*\n* Connect to web server\n*/\nclass FetchServer {\n  constructor() {\n    this.response = {\n      connected: false,\n      result: null,\n      error: null\n    };\n  }\n\n  fetchRouteServer(ROUTE, DATA_SEND, callback) {\n    // DATA_SEND SHOULD BE JSON\n    let mysqlServer = \"http://35.224.238.169:444\";\n    fetch(mysqlServer + ROUTE + \"\" + JSON.stringify(DATA_SEND) + \"\").then(res => res.json()).then(serverResponse => {\n      console.log(\"===== Connected to \" + ROUTE + \"=====\");\n      console.log(\"Data Sent : \" + JSON.stringify(DATA_SEND));\n      console.log(\"Data Received : \" + JSON.stringify(serverResponse));\n      console.log(\"=====================================\");\n      this.updateResponse(true, serverResponse);\n      callback(serverResponse, true);\n    }, error => {\n      //this.connectedToServer(false)\n      console.log(\"===== Failed to connected to server =====\");\n      console.log(\"Error received : \" + error);\n      console.log(\"===============================\");\n      this.updateResponse(false, error);\n      callback(error, false);\n    });\n  }\n\n  updateResponse(connected, response) {\n    console.log(this.response.connected);\n    this.response.connected = connected;\n    this.response.result = response;\n    console.log(this.response.connected);\n  }\n\n}\n\nexport default FetchServer;","map":{"version":3,"sources":["/Users/nolanschneider/Programming/e-commerce/src/Components/FetchServer.js"],"names":["FetchServer","constructor","response","connected","result","error","fetchRouteServer","ROUTE","DATA_SEND","callback","mysqlServer","fetch","JSON","stringify","then","res","json","serverResponse","console","log","updateResponse"],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,WAAN,CAAkB;AACdC,EAAAA,WAAW,GAAE;AAAA,SACbC,QADa,GACF;AACPC,MAAAA,SAAS,EAAC,KADH;AAEPC,MAAAA,MAAM,EAAC,IAFA;AAGPC,MAAAA,KAAK,EAAE;AAHA,KADE;AAAE;;AAMfC,EAAAA,gBAAgB,CAACC,KAAD,EAAOC,SAAP,EAAiBC,QAAjB,EAA0B;AAC1C;AACE,QAAIC,WAAW,GAAC,2BAAhB;AACFC,IAAAA,KAAK,CAAED,WAAW,GAAGH,KAAd,GAAsB,EAAtB,GAA4BK,IAAI,CAACC,SAAL,CAAeL,SAAf,CAA5B,GAAwD,EAA1D,CAAL,CACCM,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGGG,cAAD,IAAoB;AAElBC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBZ,KAAxB,GAAgC,OAA5C;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBP,IAAI,CAACC,SAAL,CAAeL,SAAf,CAA7B;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBP,IAAI,CAACC,SAAL,CAAeI,cAAf,CAAjC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACD,WAAKC,cAAL,CAAoB,IAApB,EAAyBH,cAAzB;AACAR,MAAAA,QAAQ,CAACQ,cAAD,EAAgB,IAAhB,CAAR;AAEA,KAZH,EAaGZ,KAAD,IAAW;AAET;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBd,KAAlC;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA,WAAKC,cAAL,CAAoB,KAApB,EAA0Bf,KAA1B;AACAI,MAAAA,QAAQ,CAACJ,KAAD,EAAO,KAAP,CAAR;AACH,KArBD;AAwBD;;AAEAe,EAAAA,cAAc,CAACjB,SAAD,EAAWD,QAAX,EAAoB;AAC9BgB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,QAAL,CAAcC,SAA1B;AACC,SAAKD,QAAL,CAAcC,SAAd,GAA0BA,SAA1B;AACA,SAAKD,QAAL,CAAcE,MAAd,GAAuBF,QAAvB;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,QAAL,CAAcC,SAA1B;AAIL;;AA5Ce;;AA8ClB,eAAeH,WAAf","sourcesContent":["/*\n* Connect to web server\n*/\nclass FetchServer {\n    constructor(){}\n    response = {\n        connected:false,\n        result:null,\n        error: null\n   }\n    fetchRouteServer(ROUTE,DATA_SEND,callback){\n    // DATA_SEND SHOULD BE JSON\n      let mysqlServer=\"http://35.224.238.169:444\";\n    fetch( mysqlServer + ROUTE + \"\" +  JSON.stringify(DATA_SEND) + \"\" )\n    .then(res => res.json())\n    .then(\n      (serverResponse) => {\n\n        console.log(\"===== Connected to \" + ROUTE + \"=====\");\n        console.log(\"Data Sent : \" + JSON.stringify(DATA_SEND) )\n        console.log(\"Data Received : \" + JSON.stringify(serverResponse) )\n        console.log(\"=====================================\")\n       this.updateResponse(true,serverResponse);\n       callback(serverResponse,true);\n\n      },\n      (error) => {\n\n        //this.connectedToServer(false)\n        console.log(\"===== Failed to connected to server =====\");\n        console.log(\"Error received : \" + error);\n        console.log(\"===============================\")\n        this.updateResponse(false,error);\n        callback(error,false);\n    }\n    )\n   \n  }\n\n   updateResponse(connected,response){\n       console.log(this.response.connected)\n        this.response.connected = connected;    \n        this.response.result = response;\n        console.log(this.response.connected)\n\n     \n\n  }\n}\nexport default FetchServer;"]},"metadata":{},"sourceType":"module"}