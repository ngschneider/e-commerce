{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nolanschneider/Programming/e-commerce/src/Components/Login.js\";\nimport React from 'react';\nimport \"antd/dist/antd.css\";\nimport { Form, Input, Button, Checkbox, Divider } from 'antd';\nimport { Redirect } from \"react-router-dom\";\nimport FetchServer from \"./FetchServer\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = {\n      labelCol: {\n        span: 4\n      },\n      wrapperCol: {\n        span: 16\n      }\n    };\n    this.tailLayout = {\n      wrapperCol: {\n        offset: 4,\n        span: 16\n      }\n    };\n\n    this.onFinishFailed = errorInfo => {\n      console.log('Login.js -> Form error: ', errorInfo);\n    };\n\n    this.onFinish = values => {\n      let response = this.loginFetch({\n        user: values.username,\n        pass: values.password\n      }); //this.connectedToServer(this.state.response.result);\n    };\n\n    this.state = {\n      responcs: null,\n      error: null,\n      isLogin: false,\n      username: \"Not-Logged-In\",\n      success: false\n    };\n  } // **************Layout******************** //\n\n\n  // ********************************** //\n  printStateValues() {\n    console.log(\"********STATE VALUES FROM:  Login.JS********\");\n    console.log(\"* isLogin  == \" + this.state.isLogin + \"  *\");\n    console.log(\"* username == \" + \"  *\");\n    console.log(\"* sucess   == \" + this.state.success + \"  *\");\n    console.log(\"********************************************\");\n  }\n\n  correctCredentials(credentialResponce) {\n    if (credentialResponce) {\n      this.setState({\n        isLogin: true,\n        username: this.state.responce\n      });\n    }\n  }\n\n  loginFetch2(LOGIN_INFORMATION) {\n    let getInfo = new FetchServer();\n    let route = \"/Login\";\n    getInfo.fetchRouteServer(route, LOGIN_INFORMATION, function (results, connected) {\n      console.log(results);\n    });\n  }\n\n  loginFetch(LOGIN_INFORMATION) {\n    //console.log(LOGIN_INFORMATION);\n    // console.log(JSON.stringify(LOGIN_INFORMATION));\n    let mysqlServer = \"http://ec2-3-16-215-130.us-east-2.compute.amazonaws.com:8081\";\n    let serverRoute = \"/Login:\";\n    fetch(mysqlServer + serverRoute + \"\" + JSON.stringify(LOGIN_INFORMATION) + \"\").then(res => res.json()).then(result => {\n      console.log(\"RESPONCE FROM SERVER : \" + result.username);\n      this.setState({\n        response: result.username\n      });\n      console.log(\"login.loginFetch -> CONNECTTED TO SERVER\");\n      this.connectedToServer(result);\n    }, error => {\n      this.connectedToServer(false);\n      console.log(\"FAILED TO CONNECT TO SERVER\");\n    });\n  }\n\n  connectedToServer(response) {\n    console.log(\"response   \" + response.credentials);\n\n    if (response) {\n      this.setState({\n        responce: response.result,\n        success: true\n      });\n      console.log(response.credentials);\n      this.correctCredentials(response.credentials);\n\n      if (this.state.isLogin) {\n        // Login Route responded sucessfully\n        console.log(\"Login was as, username: \" + this.state.response);\n      } else if (!this.state.isLogin) {\n        this.setState({\n          isLogin: false,\n          success: false,\n          error: response.error\n        });\n        console.log(\"Credentials are wrong!!!!!\");\n      }\n    } else {//DO SOMETHING HERE IF DIDNT CONNECT TO SERVER\n    }\n  }\n\n  render() {\n    //this.printStateValues();\n    if (!this.state.isLogin) {\n      return this.loginRender();\n    } else if (this.state.isLogin) {\n      return this.rerouteLogin();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" REPORT THIS IF YOU SEE THIS \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n\n  loginRender() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"left\",\n        style: {\n          color: \"#333\",\n          fontWeight: \"normal\"\n        },\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, { ...this.layout,\n        name: \"basic\",\n        initialValues: {\n          remember: true\n        },\n        onFinish: this.onFinish,\n        onFinishFailed: this.onFinishFailed,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Username\",\n          name: \"username\",\n          rules: [{\n            required: true,\n            message: 'Please input your username!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Password\",\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: 'Please input your password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...this.tailLayout,\n          name: \"remember\",\n          valuePropName: \"checked\",\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            children: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...this.tailLayout,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"LOGIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  }\n\n  rerouteLogin() {\n    let routePath = \"/Home\" + \"/recommended/\" + this.state.response;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: routePath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/nolanschneider/Programming/e-commerce/src/Components/Login.js"],"names":["React","Form","Input","Button","Checkbox","Divider","Redirect","FetchServer","Login","Component","constructor","props","layout","labelCol","span","wrapperCol","tailLayout","offset","onFinishFailed","errorInfo","console","log","onFinish","values","response","loginFetch","user","username","pass","password","state","responcs","error","isLogin","success","printStateValues","correctCredentials","credentialResponce","setState","responce","loginFetch2","LOGIN_INFORMATION","getInfo","route","fetchRouteServer","results","connected","mysqlServer","serverRoute","fetch","JSON","stringify","then","res","json","result","connectedToServer","credentials","render","loginRender","rerouteLogin","color","fontWeight","remember","required","message","routePath"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"antd/dist/antd.css\";\nimport { Form, Input, Button, Checkbox, Divider} from 'antd';\nimport {Redirect} from \"react-router-dom\";\nimport FetchServer from \"./FetchServer\";\n\nclass Login extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      responcs: null,\n      error: null,\n      isLogin: false,\n      username: \"Not-Logged-In\",\n      success: false,\n    };\n  }\n\n// **************Layout******************** //\n  layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\n tailLayout = {\n  wrapperCol: {\n    offset: 4,\n    span: 16,\n  },\n};\n// ********************************** //\n\nprintStateValues(){\n  console.log(\"********STATE VALUES FROM:  Login.JS********\");\n  console.log(\"* isLogin  == \" + this.state.isLogin + \"  *\" );\n  console.log(\"* username == \"  + \"  *\" );\n  console.log(\"* sucess   == \" + this.state.success + \"  *\" );\n  console.log(\"********************************************\");\n}\n\ncorrectCredentials(credentialResponce){\n  if(credentialResponce){\n    this.setState({\n      isLogin: true,\n      username: this.state.responce\n    })\n  }\n}\nloginFetch2(LOGIN_INFORMATION){\n  let getInfo = new FetchServer();\n  let route = \"/Login\";\n  getInfo.fetchRouteServer(route,LOGIN_INFORMATION,function(results,connected){\n    console.log(results)\n  });\n\n}\n\nloginFetch(LOGIN_INFORMATION){\n  //console.log(LOGIN_INFORMATION);\n // console.log(JSON.stringify(LOGIN_INFORMATION));\n  let mysqlServer=\"http://ec2-3-16-215-130.us-east-2.compute.amazonaws.com:8081\";\n  let serverRoute=\"/Login:\";\n  fetch( mysqlServer + serverRoute + \"\" +  JSON.stringify(LOGIN_INFORMATION) + \"\" )\n  .then(res => res.json())\n  .then(\n    (result) => {\n      console.log(\"RESPONCE FROM SERVER : \" + result.username);\n      this.setState({\n        response :result.username\n      })\n      console.log(\"login.loginFetch -> CONNECTTED TO SERVER\");\n      this.connectedToServer(result);\n    },\n    (error) => {\n     \n      this.connectedToServer(false)\n      console.log(\"FAILED TO CONNECT TO SERVER\");\n    }\n  )\n}\n\n  connectedToServer(response){      \n    console.log(\"response   \" + response.credentials)\n      if(response){\n\n        this.setState({\n          responce: response.result,\n          success: true\n        });\n        console.log(response.credentials)\n        this.correctCredentials(response.credentials);\n\n        if(this.state.isLogin){ // Login Route responded sucessfully\n\n          console.log(\"Login was as, username: \" + this.state.response);\n          \n\n        } else if(!this.state.isLogin) {\n          this.setState({\n            isLogin: false,\n            success: false,\n            error:response.error\n          });\n          console.log(\"Credentials are wrong!!!!!\");\n  \n        }\n    }else{\n\n          //DO SOMETHING HERE IF DIDNT CONNECT TO SERVER\n    }\n\n  }\n\n onFinishFailed = errorInfo => {\n  console.log('Login.js -> Form error: ', errorInfo);\n\n};\n\nonFinish = values => {\n   let response = this.loginFetch({user: values.username, pass: values.password} );\n    //this.connectedToServer(this.state.response.result);\n\n};\n\n  render() {\n    //this.printStateValues();\n\n    if(!this.state.isLogin){ \n      return this.loginRender();\n\n    } else if(this.state.isLogin){\n      return this.rerouteLogin();\n    }\n    return (\n      <h1> REPORT THIS IF YOU SEE THIS </h1>\n    )\n  }\n\n  loginRender(){\n    return (\n      <div>\n        <Divider orientation=\"left\" style={{ color: \"#333\", fontWeight: \"normal\" }}>\n            Log In\n          </Divider>  \n\n        <Form {...this.layout} name=\"basic\" initialValues={{ remember: true, }} onFinish={this.onFinish} onFinishFailed={this.onFinishFailed}>\n          <Form.Item label=\"Username\" name=\"username\" rules={[{ required: true, message: 'Please input your username!', }, ]} >\n            <Input />\n          </Form.Item>\n\n          <Form.Item label=\"Password\" name=\"password\" rules={[ { required: true, message: 'Please input your password!', }, ]} >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item {...this.tailLayout} name=\"remember\" valuePropName=\"checked\">\n            <Checkbox>Remember me</Checkbox>\n          </Form.Item>\n\n          <Form.Item {...this.tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              LOGIN\n            </Button>\n          </Form.Item>\n        </Form>\n        </div>\n    );\n  }\n  rerouteLogin(){\n    let routePath = \"/Home\" + \"/recommended/\" + this.state.response;\n    return (\n      <div>\n        <h1>test</h1>\n        <Redirect to={routePath}/>\n      </div>\n    );\n  }\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}